database-support: |
  Enable database support. Disabling database support switches
  zPermissions to its flat-file-based permissions store.

database-read-only: |
  Set to true if this server should be in read-only mode. Only valid when
  actually using a database. If set to read-only, the database account
  for this server should also be granted read-only permissions on
  zPermissions tables. (Not strictly required though.)

group-permission: |
  Groups may have a group permission node automatically assigned to their
  members. This is the name of that permission node. It must be a string
  suitable for Java's String.format() with one argument: the group name.
  Omit or leave blank ('') to disable this feature.
  This may also be a list of strings to automatically assign multiple
  permissions.

assigned-group-permission: |
  Similar to group-permission, but only applied to "assigned" groups (groups
  that the player is explicitly a member of, including the default group, but
  not any inherited groups).
  Omit or leave blank ('') to disable this feature.
  This may also be a list of strings to automatically assign multiple
  permissions.

assigned-groups-can-include-default: |
  Set to false if you want your assigned-group-permission (above) to never
  include the default group.

default-group: |
  The default group. Players that are not explicitly members of any group
  are considered members of this group.

explicit-default-group-membership: |
  Normally, membership in the default group is implicit, i.e. you are considered
  a member of the default group if you are not a member of any group. Setting
  this to true makes the membership explicit, writing out the default group
  membership to storage on login.

default-track: |
  The default track. When the track name is omitted while using the /promote,
  /demote, /setrank, and /unsetrank commands, this is the track used.

dump-directory: |
  Directory where to load/store dumps. If this is not an absolute path, it
  will be interpreted as relative to the server root.

default-temp-permission-timeout: |
  Default timeout for temporary permissions, in seconds

tracks: |
  Track definitions. Each key should be the name of the track. The value
  should be a list of group names in ascending order.

default-primary-group-track: |
  Name of the track used to determine a player's "primary group," a
  concept often used by other plugins via the native API. A
  player that does not have a track explicitly set via the
  /permissions .. player .. settrack command will use this track
  instead. Leave blank ('') to disable and use the highest-weight group
  as the primary group.

kick-on-error: |
  If any problems occur while determining a player's permissions (e.g.
  SQLExceptions, network errors, etc.), kick the player. This may be more
  desirable to having the user have free reign with indeterminate permissions.

kick-ops-on-error: |
  Only valid if kick-on-error is true. If a problem occurs while determining
  an op's permissions, then the op will only be kicked if this is true.

region-support: |
  Whether region-based permissions are enabled. Requires a region plugin such
  as WorldGuard or Residence. Setting this to false will save some processing
  if you use a region plugin but don't use region-based permissions. Has no
  effect if a region plugin is not present.

auto-refresh-interval: |
  Interval, in minutes, in which to automatically refresh permissions from
  the database. Set to a non-positive number to disable. Has no effect on
  the flat-file storage method. DO NOT SET IT TOO LOW. Otherwise you run
  the risk of refreshes overlapping or permissions changes inexplicably
  being "forgotten."
  Unless you have an external process modifying zPermissions tables, you
  should have no need to enable this feature! (And even then, its use is
  questionable...)

auto-refresh-force: |
  By default, the refreshes set by auto-refresh-interval are conditional.
  That is, the refreshes do not actually occur unless the data version
  number (found in the table named DATA_VERSION by default) is different.
  Set this to true if you wish to perform an unconditional refresh instead.
  (Prior to 1.1, the refreshes were always unconditional.)

opaque-inheritance: |
  Determines how inherited groups and assigned groups are resolved. When
  true, each assigned group is fully resolved (itself + all ancestors)
  before applying its permissions in assignment priority. (That is, groups
  are flattened before being applied.) When false, all assigned groups and
  their ancestor groups are treated as individual groups and are applied
  in "topological order." <http://en.wikipedia.org/wiki/Topological_sorting>

interleaved-player-permissions: |
  Determines when to apply player permissions. If true, player permissions
  are interleaved with group-resolved permissions at every "level"
  (universal, world, region, region/world). If false, all player permissions
  are applied once all group permissions have been applied.

rank-admin-broadcast: |
  If true, rank commands will broadcast changes to admins by default.
  Otherwise, rank commands will broadcast to players with a custom
  permission, e.g. zpermissions.notify.promote, etc.

region-managers: |
  If region-support is enabled, this is the order in which region manager
  plugins will be detected. The first plugin detected will be used.

inherited-metadata: |
  If true, metadata resolution will follow group inheritence rules, exactly
  like permissions.

debug: |
  Enable debug logging.
